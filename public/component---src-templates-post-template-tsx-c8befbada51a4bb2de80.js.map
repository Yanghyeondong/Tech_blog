{"version":3,"file":"component---src-templates-post-template-tsx-c8befbada51a4bb2de80.js","mappings":"4PAWA,IAAMA,GAAmB,0OAoCnBC,GAAK,6SAiBLC,GAAQ,kRAeRC,GAAU,mJAOVC,GAAY,oQAaZC,GAAW,sHAMXC,GAAQ,+EA+Bd,EA3B2D,YAIvD,IAHFC,EAGC,EAHDA,MACAC,EAEC,EAFDA,KACAC,EACC,EADDA,WAIA,OACEC,EAAAA,EAAAA,IAACV,EAAD,MACEU,EAAAA,EAAAA,IAACT,EAAD,KAAQM,IACRG,EAAAA,EAAAA,IAACR,EAAD,MACEQ,EAAAA,EAAAA,IAACP,EAAD,KACGM,EAAWE,KAAI,SAAAC,GAAQ,OACtBF,EAAAA,EAAAA,IAACN,EAAD,CAAcS,IAAKD,GAAWA,EAD/B,MAIHF,EAAAA,EAAAA,IAACL,EAAD,MACEK,EAAAA,EAAAA,IAACJ,EAAD,MACEI,EAAAA,EAAAA,IAACI,EAAAA,EAAD,CAAiBC,KAAMC,EAAAA,OAEtBR,IApBb,EC9FA,IAAMS,GAAe,iJASfC,GAAkBC,EAAAA,EAAAA,IAAO,SAACC,GAAD,OAC7BV,EAAAA,EAAAA,IAACW,EAAAA,GAAD,UAAiBD,EAAjB,CAAwBE,MAAO,CAAEC,SAAU,cADrB,wBAAAJ,CAAHK,CAAAA,KAAAA,UAAAA,OAAAA,yHA4BrB,EAdmD,YAK/C,IAJFjB,EAIC,EAJDA,MACAC,EAGC,EAHDA,KACAC,EAEC,EAFDA,WACAgB,EACC,EADDA,UAEA,OACEf,EAAAA,EAAAA,IAACO,EAAD,MACEP,EAAAA,EAAAA,IAACQ,EAAD,CAAiBQ,MAAOD,EAAWE,IAAI,eACvCjB,EAAAA,EAAAA,IAACkB,EAAD,CAAcrB,MAAOA,EAAOC,KAAMA,EAAMC,WAAYA,IAT1D,EC/BA,IAAMoB,GAAgB,orEA8NtB,EAJyD,YAAqB,IAATC,EAAQ,EAARA,KACnE,OAAOpB,EAAAA,EAAAA,IAACmB,EAAD,CAAkBE,wBAAyB,CAAEC,OAAQF,IAD9D,EC1NA,IAAMG,GAAU,wEAGVC,GAAG,8cA+CT,EATqD,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtD,OACEzB,EAAAA,EAAAA,IAACuB,EAAD,MACEvB,EAAAA,EAAAA,IAACwB,EAAD,CAAKH,wBAAyB,CAAEC,OAAQG,KAH9C,EC3BA,IAAMC,GAAa,cAAAC,OAAAA,YAAA,EAAAC,KAAAA,SAAAC,OAAAA,wJAqDnB,EAzC2D,YAKxD,IAHsBC,EAGtB,EAJDC,KACEC,kBAAqBF,MAEXG,EACX,EADDC,SAAYD,KAEZ,EAgBIH,EAAM,GAfRK,KACEf,EAFJ,EAEIA,KAEAgB,GAJJ,EAGIC,GAHJ,EAIID,iBAJJ,IAKIE,YACEzC,EANN,EAMMA,MACA0C,EAPN,EAOMA,QACAzC,EARN,EAQMA,KACAC,EATN,EASMA,WATN,IAUMgB,UACqByB,EAX3B,EAWQC,gBAAmBD,gBACnBE,EAZR,EAYQA,UAMR,OACE1C,EAAAA,EAAAA,IAAC2C,EAAAA,EAAD,CAAU9C,MAAOA,EAAO+C,YAAaL,EAASM,IAAKZ,EAAMjB,MAAO0B,IAC5D1C,EAAAA,EAAAA,IAAC8C,EAAD,CACEjD,MAAOA,EACPC,KAAMA,EACNC,WAAYA,EACZgB,UAAWyB,KAEbxC,EAAAA,EAAAA,IAAC0B,EAAD,MACE1B,EAAAA,EAAAA,IAAC+C,EAAD,CAAa3B,KAAMA,KACnBpB,EAAAA,EAAAA,IAACgD,EAAD,CAAiBvB,QAASW,KAlCpC,C","sources":["webpack://gatsby-starter-default/./src/components/Post/PostHeadInfo.tsx","webpack://gatsby-starter-default/./src/components/Post/PostHead.tsx","webpack://gatsby-starter-default/./src/components/Post/PostContent.tsx","webpack://gatsby-starter-default/./src/components/Post/TableOfContents.tsx","webpack://gatsby-starter-default/./src/templates/post_template.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCalendarDays } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport type PostHeadInfoProps = {\r\n  title: string\r\n  date: string\r\n  categories: string[]\r\n}\r\n\r\nconst PostHeadInfoWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 768px;\r\n  height: 400px;\r\n  margin: 0 auto;\r\n  padding: 60px 0;\r\n  color: #ffffff;\r\n\r\n  @media (max-width: 768px) {\r\n    height: 330px;\r\n    width: 100%;\r\n    padding: 40px 20px;\r\n  }\r\n`\r\n\r\nconst PrevPageIcon = styled.div`\r\n  margin-left: 95%;\r\n  display: grid;\r\n  place-items: center;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  background: #ffffff;\r\n  color: #000000;\r\n  font-size: 22px;\r\n  cursor: pointer;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\r\n\r\n  @media (max-width: 768px) {\r\n    width: 30px;\r\n    height: 30px;\r\n    font-size: 18px;\r\n  }\r\n`\r\n\r\nconst Title = styled.div`\r\n  display: -webkit-box;\r\n  overflow: hidden;\r\n  overflow-wrap: break-word;\r\n  margin: auto 0;\r\n  text-overflow: ellipsis;\r\n  white-space: normal;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  font-size: 42px;\r\n  font-weight: 800;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 30px;\r\n  }\r\n`\r\n\r\nconst PostData = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 10px;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    font-size: 15px;\r\n    font-weight: 400;\r\n  }\r\n`\r\nconst Categories = styled.div`\r\n  display: flex;\r\n  justify-content: start;\r\n  @media (max-width: 768px) {\r\n    align-items: flex-start;\r\n  }\r\n`\r\nconst CategoryItem = styled.div`\r\n  margin: 2px 5px;\r\n  padding: 1px 7px 4px 7px;\r\n  border-radius: 6px;\r\n  background-color: #49ae8e;\r\n  font-size: 16px;\r\n  font-weight: 800;\r\n  color: white;\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n  }\r\n`\r\nconst DateWrapper = styled.div`\r\n  display: flex;\r\n  @media (max-width: 768px) {\r\n    margin: 7px 7px;\r\n  }\r\n`\r\nconst DateIcon = styled.div`\r\n  margin-right: 10px;\r\n`\r\n\r\nconst PostHeadInfo: FunctionComponent<PostHeadInfoProps> = function ({\r\n  title,\r\n  date,\r\n  categories,\r\n}) {\r\n  const goBackPage = () => window.history.back()\r\n\r\n  return (\r\n    <PostHeadInfoWrapper>\r\n      <Title>{title}</Title>\r\n      <PostData>\r\n        <Categories>\r\n          {categories.map(category => (\r\n            <CategoryItem key={category}>{category}</CategoryItem>\r\n          ))}\r\n        </Categories>\r\n        <DateWrapper>\r\n          <DateIcon>\r\n            <FontAwesomeIcon icon={faCalendarDays}/> \r\n          </DateIcon>\r\n            {date}\r\n        </DateWrapper>\r\n      </PostData>\r\n    </PostHeadInfoWrapper>\r\n  )\r\n}\r\n\r\nexport default PostHeadInfo\r\n","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\r\nimport PostHeadInfo, { PostHeadInfoProps } from 'components/Post/PostHeadInfo'\r\n\r\ntype PostHeadProps = PostHeadInfoProps & {\r\n  thumbnail: IGatsbyImageData\r\n}\r\n\r\ntype GatsbyImgProps = {\r\n  image: IGatsbyImageData\r\n  alt: string\r\n  className?: string\r\n}\r\n\r\nconst PostHeadWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 400px;\r\n  @media (max-width: 768px) {\r\n    height: 300px;\r\n  }\r\n`\r\n\r\nconst BackgroundImage = styled((props: GatsbyImgProps) => (\r\n  <GatsbyImage {...props} style={{ position: 'absolute' }} />\r\n))`\r\n  z-index: -1;\r\n  width: 100%;\r\n  height: 400px;\r\n  object-fit: cover;\r\n  filter: brightness(0.25);\r\n\r\n  @media (max-width: 768px) {\r\n    height: 300px;\r\n  }\r\n`\r\n\r\nconst PostHead: FunctionComponent<PostHeadProps> = function ({\r\n  title,\r\n  date,\r\n  categories,\r\n  thumbnail,\r\n}) {\r\n  return (\r\n    <PostHeadWrapper>\r\n      <BackgroundImage image={thumbnail} alt=\"thumbnail\" />\r\n      <PostHeadInfo title={title} date={date} categories={categories} />\r\n    </PostHeadWrapper>\r\n  )\r\n}\r\n\r\nexport default PostHead","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\ntype PostContentProps = {\r\n  html: string\r\n}\r\n\r\nconst MarkdownRenderer = styled.div`\r\n  // Renderer Style\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 768px;\r\n  margin: 0 auto;\r\n  padding: 100px 0;\r\n  word-break: break-all;\r\n\r\n  // Markdown Style\r\n  line-height: 2.5;\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n\r\n  // Apply Padding Attribute to All Elements\r\n  p {\r\n    padding: 3px 0;\r\n  }\r\n\r\n  strong {\r\n    margin: 0px 1px;\r\n    font-size: 18.3px;\r\n    font-weight: 800;\r\n  }\r\n\r\n  // Adjust Heading Element Style\r\n  h1,\r\n  h2 {\r\n    font-weight: 800;\r\n    margin-bottom: 20px;\r\n  }\r\n  h3 {\r\n    margin-bottom: 0px;\r\n  }\r\n\r\n  * + h1,\r\n  * + h2,\r\n  * + h3 {\r\n    margin-top: 50px;\r\n  }\r\n\r\n  * + h4 {\r\n    margin-top: 25px;\r\n  }\r\n\r\n  hr + h1,\r\n  hr + h2,\r\n  hr + h3 {\r\n    margin-top: 0;\r\n  }\r\n\r\n  hr + h4 {\r\n  margin-top: 25px;\r\n  }\r\n\r\n  h1 {\r\n    font-size: 40px;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 35px;\r\n  }\r\n\r\n  h3 {\r\n    font-size: 23px;\r\n    color: #49ae8e;\r\n  }\r\n\r\n  // Adjust Quotation Element Style\r\n  blockquote {\r\n    margin: 30px 10px;\r\n    padding: 5px 15px;\r\n    border-left: 2px solid #49ae8e;\r\n    background-color: #f9f9f9; \r\n    font-weight: 400;\r\n  }\r\n  blockquote li{\r\n    font-size: 18px;\r\n    margin: 0px 15px;\r\n    padding: 0px 10px 0px 5px;\r\n    background-color: #f9f9f9;\r\n  }\r\n  blockquote ol li::Marker{\r\n    font-weight: 800;\r\n    color: #000;\r\n  }\r\n\r\n  // Adjust italic Element Style\r\n  em{\r\n    padding-right: 8px;\r\n    padding-left: 3px;\r\n  }\r\n\r\n  // Adjust List Element Style\r\n  ol {\r\n    margin-left: 20px;\r\n    padding: 5px 0;\r\n  }\r\n  ol li::Marker{\r\n    font-weight: 800;\r\n    font-size: 19px;\r\n    color: #49ae8e;\r\n  }\r\n  ul {\r\n    margin: 20px;\r\n    margin-right: 0px;\r\n  }\r\n  ul li::Marker{\r\n    content: \"â–¶ \";\r\n    font-weight: 800;\r\n    color: #49ae8e;\r\n  }\r\n  li{\r\n    font-size: 17px;\r\n    margin: 10px 20px;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    background-color: #f9f9f9;\r\n    border-radius: 10px;\r\n  }\r\n  li strong{\r\n    font-size: 17.5px;\r\n  }\r\n  // Adjust del style\r\n  del{\r\n    text-decoration: line-through 3px solid rgba(0, 0, 0, .4);\r\n  }\r\n\r\n  // Adjust Horizontal Rule style\r\n  hr {\r\n    border: 1px solid #000000;\r\n    margin: 100px 0;\r\n  }\r\n\r\n  // Adjust Link Element Style\r\n  a {\r\n    font-weight: 800;\r\n    color: #49ae8e;\r\n    text-decoration: underline 1px;\r\n    text-underline-position: under;\r\n  }\r\n  a:hover {\r\n    color: #ffffff;\r\n    background-color: #49ae8e;\r\n  }\r\n  // Adjust Code Style\r\n  pre[class*='language-'] {\r\n    font-weight: 300;\r\n    padding: 20px 30px;\r\n    margin-bottom: 15px;\r\n    font-size: 20px;\r\n    border-radius: 10px;\r\n    border: 1px solid #dddddd;\r\n    ::-webkit-scrollbar-thumb {\r\n      background: rgba(255, 255, 255, 0.5);\r\n    }\r\n  }\r\n  pre[class*='language-'] * {\r\n    font-family: 'Roboto Mono', monospace;\r\n    font-weight: 400;\r\n  }\r\n  code[class*='language-'] {\r\n    font-size: 16px;\r\n    margin-right: 4px;\r\n  },\r\n  :not(pre) > code[class*=\"language-\"] {\r\n    font-size: 15px;\r\n    margin-right: 4px;\r\n    margin-left: 4px;\r\n    color: #000000;\r\n    background-color: #fafafa;\r\n    border: 1px solid #dddddd;\r\n    padding: 1px 4px 3px 4px;\r\n    border-radius: 5px;\r\n    ::selection{\r\n      background-color: #dadada;\r\n    }\r\n  }\r\n\r\n  // Markdown Responsive Design\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    padding: 80px 20px;\r\n    line-height: 2.0;\r\n    font-size: 16px;\r\n\r\n    h1 {\r\n      font-size: 26px;\r\n    }\r\n\r\n    h2 {\r\n      font-size: 23px;\r\n    }\r\n\r\n    h3 {\r\n      font-size: 20px;\r\n    }\r\n\r\n    strong {\r\n      margin: 0px 3px;\r\n      font-size: 17px;\r\n      font-weight: 800;\r\n    }\r\n\r\n    img {\r\n      width: 100%;\r\n    }\r\n\r\n    hr {\r\n      margin: 50px 0;\r\n    }\r\n\r\n    li{\r\n      font-size: 16px;\r\n    }\r\n  }\r\n`\r\n\r\nconst PostContent: FunctionComponent<PostContentProps> = function ({ html }) {\r\n  return <MarkdownRenderer dangerouslySetInnerHTML={{ __html: html }} />\r\n}\r\n\r\nexport default PostContent\r\n","import styled from \"@emotion/styled\"\r\nimport React, { FunctionComponent } from 'react'\r\n\r\ntype TocProps = {\r\n  content: string\r\n}\r\n\r\nconst TocWrapper = styled.div`\r\n  height: auto;\r\n`\r\nconst Toc = styled.div`\r\n\r\n  position: sticky;\r\n  top: 50px;\r\n  display: inline-block;\r\n  margin: 120px 40px;\r\n  margin-right: 0px;\r\n  height: auto;\r\n  width: 200px;\r\n  font-size: 14.5px;\r\n  border-left: 3px solid #4ccd97;\r\n  \r\n\r\n  @media (max-width: 1200px) {\r\n    display: none;\r\n  }\r\n\r\n  li {\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    padding: 5px;\r\n    color: gray;\r\n  }\r\n\r\n  ul {\r\n    margin-left: 10px;\r\n    padding: 7px 5px;\r\n    list-style: none;\r\n  }\r\n\r\n  a:hover {\r\n    transition: 0.3s;\r\n    font-size: 15px;\r\n    font-weight: 700;\r\n    color: #433E49;\r\n  }\r\n`\r\nconst TableOfContents: FunctionComponent<TocProps> = ({ content }) => {\r\n  return (\r\n    <TocWrapper>\r\n      <Toc dangerouslySetInnerHTML={{ __html: content } }\r\n      />\r\n    </TocWrapper>\r\n  )\r\n}\r\n\r\nexport default TableOfContents","import React, { FunctionComponent } from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport { PostPageItemType } from 'types/PostItem.types'\r\nimport Template from 'components/Common/Template'\r\nimport PostHead from 'components/Post/PostHead'\r\nimport PostContent from 'components/Post/PostContent'\r\nimport DisqusCommentBox from'components/Post/DisqusCommentBox'\r\nimport TableOfContents from \"../components/Post/TableOfContents\"\r\nimport styled from \"@emotion/styled\"\r\n\r\ntype PostTemplateProps = {\r\n  data: {\r\n    allMarkdownRemark: {\r\n      edges: PostPageItemType[]\r\n    }\r\n  },\r\n  location: {\r\n    href: string\r\n  }\r\n}\r\n\r\nconst PostContainer = styled.div`\r\n  margin: auto auto;\r\n  display: flex;\r\n  flex-direction: row;\r\n  @media (min-width: 1200px) {\r\n    margin-left: calc( 50% - 384px );\r\n  }\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst PostTemplate: FunctionComponent<PostTemplateProps> = function ({\r\n  data: {\r\n    allMarkdownRemark: { edges },\r\n  },\r\n  location: { href },\r\n}) {\r\n  const {\r\n    node: {\r\n      html,\r\n      id,\r\n      tableOfContents,\r\n      frontmatter: {\r\n        title,\r\n        summary,\r\n        date,\r\n        categories,\r\n        thumbnail: {\r\n          childImageSharp: { gatsbyImageData },\r\n          publicURL,\r\n        },\r\n      },\r\n    },\r\n  } = edges[0];\r\n\r\n  return (\r\n    <Template title={title} description={summary} url={href} image={publicURL}>\r\n        <PostHead\r\n          title={title}\r\n          date={date}\r\n          categories={categories}\r\n          thumbnail={gatsbyImageData}\r\n        />\r\n        <PostContainer>\r\n          <PostContent html={html} />\r\n          <TableOfContents content={tableOfContents} />\r\n        </PostContainer>\r\n{/*         <DisqusCommentBox url={href} identifier={id} title={title}/> */}\r\n    </Template>\r\n  )\r\n}\r\n\r\nexport default PostTemplate\r\n\r\nexport const queryMarkdownDataBySlug = graphql`\r\n  query queryMarkdownDataBySlug($slug: String) {\r\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\r\n      edges {\r\n        node {\r\n          html\r\n          id\r\n          tableOfContents\r\n          frontmatter {\r\n            title\r\n            summary\r\n            date(formatString: \"YYYY.MM.DD.\")\r\n            categories\r\n            thumbnail {\r\n              childImageSharp {\r\n                gatsbyImageData\r\n              }\r\n              publicURL\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["PostHeadInfoWrapper","Title","PostData","Categories","CategoryItem","DateWrapper","DateIcon","title","date","categories","___EmotionJSX","map","category","key","FontAwesomeIcon","icon","faCalendarDays","PostHeadWrapper","BackgroundImage","_styled","props","GatsbyImage","style","position","process","thumbnail","image","alt","PostHeadInfo","MarkdownRenderer","html","dangerouslySetInnerHTML","__html","TocWrapper","Toc","content","PostContainer","target","name","styles","edges","data","allMarkdownRemark","href","location","node","tableOfContents","id","frontmatter","summary","gatsbyImageData","childImageSharp","publicURL","Template","description","url","PostHead","PostContent","TableOfContents"],"sourceRoot":""}